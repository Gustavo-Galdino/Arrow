generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String         @id @default(cuid())
  name          String?
  email         String?        @unique
  password      String
  emailVerified DateTime?
  image         String?
  nivel         Int?
  experience    Int?
  accounts      Account[]
  sessions      Session[]
  tables        WorkoutTable[]
  diettTable    DietTable[]

  @@map("users")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model WorkoutTable {
  id        String @id @default(cuid())
  tableName String
  userId    String

  user                   User                 @relation(fields: [userId], references: [id])
  WorkoutTableExercise   WorkoutTableExercise @relation(fields: [workoutTableExerciseId], references: [id])
  WorkoutTableNote       WorkoutTableNote     @relation(fields: [workoutTableNoteId], references: [id])
  workoutTableExerciseId String
  workoutTableNoteId     String

  @@map("workoutTables")
}

model WorkoutTableExercise {
  id String @id @default(cuid())

  exercise     Exercise[]
  WorkoutTable WorkoutTable[]

  @@map("workoutTableExercises")
}

model Exercise {
  id           String @id @default(cuid())
  exerciseName String
  series       Int
  volume       Int

  tables WorkoutTableExercise[]

  @@map("exercises")
}

model WorkoutTableNote {
  id String @id @default(cuid())

  notes        Note[]
  WorkoutTable WorkoutTable[]

  @@map("workoutTableNotes")
}

model Note {
  id         String @id @default(cuid())
  annotation String

  tables WorkoutTableNote[]

  @@map("notes")
}

model DietTable {
  id     String @id @default(cuid())
  userId String

  user    User      @relation(fields: [userId], references: [id])
  dietBox DietBox[]

  @@map("dietTables")
}

model DietBox {
  id    String @id @default(cuid())
  title String

  dietaTable  DietTable  @relation(fields: [dietTableId], references: [id])
  dietTableId String
  dietList    DietList[]

  @@map("dietTableExercises")
}

model DietList {
  id   String @id @default(cuid())
  meal String

  dietBox DietBox @relation(fields: [dietBoxId], references: [id])

  food      Food[]
  dietBoxId String
}

model Food {
  id       String @id @default(cuid())
  foodName String

  tables DietList[]

  @@map("foods")
}
